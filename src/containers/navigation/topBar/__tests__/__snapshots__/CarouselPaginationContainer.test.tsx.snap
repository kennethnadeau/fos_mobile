// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CarouselPaginationContainer /> should match snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityLabel="Carousel pagination"
    accessible={true}
  >
    <View
      accessible={false}
      pointerEvents="box-none"
      style={
        Array [
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "paddingHorizontal": 20,
            "paddingVertical": 30,
          },
          Object {
            "flexDirection": "row",
          },
          Object {
            "paddingVertical": 0,
          },
        ]
      }
    >
      <View
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginHorizontal": 8,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgba(126, 131, 149, 1)",
              "borderRadius": 3.5,
              "height": 7,
              "opacity": 0.5,
              "transform": Array [
                Object {
                  "scale": 0.8,
                },
              ],
              "width": 7,
            }
          }
        />
      </View>
      <View
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginHorizontal": 8,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgba(126, 131, 149, 1)",
              "borderRadius": 3.5,
              "height": 7,
              "opacity": 0.5,
              "transform": Array [
                Object {
                  "scale": 0.8,
                },
              ],
              "width": 7,
            }
          }
        />
      </View>
      <View
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginHorizontal": 8,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgba(126, 131, 149, 1)",
              "borderRadius": 3.5,
              "height": 7,
              "opacity": 0.5,
              "transform": Array [
                Object {
                  "scale": 0.8,
                },
              ],
              "width": 7,
            }
          }
        />
      </View>
      <View
        accessible={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "marginHorizontal": 8,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgba(126, 131, 149, 1)",
              "borderRadius": 3.5,
              "height": 7,
              "opacity": 0.5,
              "transform": Array [
                Object {
                  "scale": 0.8,
                },
              ],
              "width": 7,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
